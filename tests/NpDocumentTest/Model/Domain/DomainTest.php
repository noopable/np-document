<?php
namespace NpDocumentTest\Model\Domain;

use Flower\Test\TestTool;
use NpDocument\Model\Domain\Domain as TestDomain;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-21 at 19:28:03.
 */
class DomainTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Domain
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new TestDomain;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }
    
    /**
     * @covers NpDocument\Model\Domain\Domain::setDomainId
     */
    public function testSetDomainId()
    {
        $domainId = 123;
        $this->object->setDomainId($domainId);
        $this->assertEquals($domainId, TestTool::getPropertyValue($this->object, 'domainId'));
    }

    /**
     * @depends testSetDomainId
     * @covers NpDocument\Model\Domain\Domain::getDomainId
     */
    public function testGetDomainId()
    {
        $domainId = 123;
        $this->object->setDomainId($domainId);
        $this->assertEquals($domainId, $this->object->getDomainId());
    }
    
    /**
     * @covers NpDocument\Model\Domain\Domain::setDomainName
     */
    public function testSetDomainName()
    {
        $domainName = 'example.com';
        $this->object->setDomainName($domainName);
        $this->assertEquals($domainName, TestTool::getPropertyValue($this->object, 'domainName'));
    }
    
    /**
     * @covers NpDocument\Model\Domain\Domain::getDomainName
     */
    public function testGetDomainName()
    {
        $domainName = 'example.com';
        $this->object->setDomainName($domainName);
        $this->assertEquals($domainName, TestTool::getPropertyValue($this->object, 'domainName'));
    }
}
