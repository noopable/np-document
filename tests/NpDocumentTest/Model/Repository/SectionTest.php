<?php
namespace NpDocumentTest\Model\Repository;

use NpDocument\Model\Repository\Section;
use NpDocument\Model\Section\DataContainer;
use NpDocument\Model\Section\SectionClass\Section as EntityPrototype;
use NpDocument\Model\Section\SectionPluginManager;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-08 at 22:11:28.
 */
class SectionTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Section
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $proto = new EntityPrototype;
        $table = $this->getMock('Zend\Db\TableGateway\TableGatewayInterface');
        $this->object = new Section('section', $proto, $table);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers NpDocument\Model\Repository\Section::setSectionPluginManager
     */
    public function testSetSectionPluginManager()
    {
        $ref = new \ReflectionObject($this->object);
        $prop = $ref->getProperty('sectionPluginManager');
        $prop->setAccessible(true);
        $pluginManager = new SectionPluginManager;
        $this->object->setSectionPluginManager($pluginManager);
        $this->assertSame($pluginManager, $prop->getValue($this->object));
    }

    /**
     * 
     * @expectedException NpDocument\Exception\RuntimeException
     */
    public function testGetSectionPluginManagerWithoutInjection()
    {
        $this->object->getSectionPluginManager();
    }
    
    /**
     * @covers NpDocument\Model\Repository\Section::getSectionPluginManager
     */
    public function testGetSectionPluginManagerWithDi()
    {
        $config = array(
            'instance' => array(
                'NpDocument\Model\Repository\Section' => array(
                   'parameters' => array(
                       'name' => 'section',
                       'entityPrototype' => 'NpDocument\Model\Section\DataContainer',
                       'tableGateway' => $this->getMock('Zend\Db\TableGateway\TableGatewayInterface'),
                   ),
                   'injections' => array(
                       'setSectionPluginManager' => array(
                           array('NpDocument\Model\Section\SectionPluginManager'),
                       ),
                   ),
               ),
               'NpDocument\Model\Section\SectionPluginManager' => array(
                   'injections' => array(
                       'setInvokableClass' => array(
                           array('name' => 'generic', 'invokableClass' => 'NpDocument\Model\Section\SectionClass\Section'),
                       ),
                   ),
               ),
            ),
        );
        
        $oConfig = new \Zend\Di\Config($config);
        $di = new \Zend\Di\Di;
        $oConfig->configure($di);
        
        $object = $di->get('NpDocument\Model\Repository\Section');
        $this->assertInstanceOf('NpDocument\Model\Repository\Section', $object);
        
        $plugin = $object->getSectionPluginManager();
        
        $this->assertInstanceOf('NpDocument\Model\Section\SectionPluginManager', $plugin);
    }
    
    /**
     * @covers NpDocument\Model\Repository\Section::createSection
     */
    public function testCreateSection()
    {
        $pluginManager = new SectionPluginManager;
        $this->object->setSectionPluginManager($pluginManager);
        $section = $this->object->createSection();
        $this->assertInstanceOf('NpDocument\Model\Section\SectionClass\Section', $section);
    }
    /**
     * @covers NpDocument\Model\Repository\Section::saveSections
     * @todo   Implement testSaveSections().
     */
    public function testSaveSections()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NpDocument\Model\Repository\Section::saveSection
     * @todo   Implement testSaveSection().
     */
    public function testSaveSection()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NpDocument\Model\Repository\Section::findSection
     * @todo   Implement testFindSection().
     */
    public function testFindSection()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NpDocument\Model\Repository\Section::retrieveSectionFromDataContainer
     */
    public function testRetrieveSectionFromDataContainer()
    {
        $pluginManager = new SectionPluginManager;
        $this->object->setSectionPluginManager($pluginManager);
        $dataContainer = new DataContainer;
        $dataContainer->section_class = 'section';
        $section = $this->object->retrieveSectionFromDataContainer($dataContainer);
        $this->assertInstanceOf('NpDocument\Model\Section\SectionClass\Section', $section);
    }

    /**
     * @expectedException NpDocument\Exception\DomainException
     */
    public function testRetrieveSectionFromBareboneDataContainer()
    {
        $pluginManager = new SectionPluginManager;
        $this->object->setSectionPluginManager($pluginManager);
        $dataContainer = new DataContainer;
        $section = $this->object->retrieveSectionFromDataContainer($dataContainer);
        $this->assertInstanceOf('NpDocument\Model\Section\SectionClass\Section', $section);
    }
    
    /**
     * @covers NpDocument\Model\Repository\Section::retrieveSections
     * @todo   Implement testRetrieveSections().
     */
    public function testRetrieveSections()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NpDocument\Model\Repository\Section::retrieveBranchSections
     * @todo   Implement testRetrieveBranchSections().
     */
    public function testRetrieveBranchSections()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NpDocument\Model\Repository\Section::setDomain
     * @todo   Implement testSetDomain().
     */
    public function testSetDomain()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NpDocument\Model\Repository\Section::getDomain
     * @todo   Implement testGetDomain().
     */
    public function testGetDomain()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
