<?php
namespace NpDocumentTest\Model\Repository;

use NpDocument\Model\Repository\RepositoryPluginManager;
use Zend\Di\Di;
use Zend\Di\Config as DiConfig;
use Zend\ServiceManager\Di\DiAbstractServiceFactory;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-08 at 23:03:03.
 */
class RepositoryPluginManagerTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var RepositoryPluginManager
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new RepositoryPluginManager;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers NpDocument\Model\Repository\RepositoryPluginManager::loadRepository
     */
    public function testLoadRepositoryWithDiAbstractFactory()
    {
        $config = array(
            'instance' => array(
                'NpDocument\Model\Repository\Section' => array(
                   'parameters' => array(
                       'name' => 'section',
                       'entityPrototype' => 'NpDocument\Model\Section\Section',
                       'tableGateway' => $this->getMock('Zend\Db\TableGateway\TableGatewayInterface'),
                   ),
                   'injections' => array(
                       'setSectionPluginManager' => array(
                           array('NpDocument\Model\Section\SectionPluginManager'),
                       ),
                   ),
               ),
               'NpDocument\Model\Section\SectionPluginManager' => array(
                   'injections' => array(
                       'setInvokableClass' => array(
                           array('name' => 'generic', 'invokableClass' => 'NpDocument\Model\Section\Section'),
                       ),
                   ),
               ),
            ),
        );
        $di = new Di;
        $diConfig = new DiConfig($config);
        $diConfig->configure($di);
        $diAbstractServiceFactory = new DiAbstractServiceFactory($di, DiAbstractServiceFactory::USE_SL_NONE);
        $this->object->addAbstractFactory(
            $diAbstractServiceFactory
        );
        
        $sectionRepository = $this->object->byName('Section');
        
        $this->assertInstanceOf('NpDocument\Model\Repository\Section', $sectionRepository);
    }
}
