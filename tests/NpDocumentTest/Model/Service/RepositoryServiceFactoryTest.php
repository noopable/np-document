<?php
namespace NpDocumentTest\Service;

use Zend\ServiceManager\ServiceManager;
use NpDocument\Service\RepositoryServiceFactory;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-09 at 05:13:14.
 */
class RepositoryServiceFactoryTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var RepositoryServiceFactory
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new RepositoryServiceFactory;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }
    
    public function testCreateService()
    {
        $serviceManager = new ServiceManager;
        $config = array();
        $serviceManager->setService('Config', $config);
        $plugins = $this->object->createService($serviceManager);
        $this->assertInstanceOf('NpDocument\Model\Repository\RepositoryPluginManager', $plugins);
    }
    
    public function testCreateServiceWithConfig()
    {
        $serviceManager = new ServiceManager;
        $config = array(
            'np_document_repositories' => array(
                'plugin_name_space' => 'foo'
                //その他AbstractPluginManager(ServiceManager)のconfigurationを行える。
            ),
        );
        $serviceManager->setService('Config', $config);
        $plugins = $this->object->createService($serviceManager);
        $this->assertInstanceOf('NpDocument\Model\Repository\RepositoryPluginManager', $plugins);
        $ref = new \ReflectionObject($plugins);
        $prop = $ref->getProperty('pluginNameSpace');
        $prop->setAccessible(true);
        $this->assertEquals('foo', $prop->getValue($plugins));
    }
}
