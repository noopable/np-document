<?php
namespace NpDocumentTest\Resource;

use NpDocument\Resource\ResourceConfig;
use NpDocument\Resource\ResourceClass\Resource;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-03 at 23:16:27.
 */
class ResourceConfigTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var ResourceConfig
     */
    protected $object;

    /**
     *
     * @var string
     */
    protected $resourceIdDelimiter;
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->resourceIdDelimiter = Resource::getDelimiter();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers NpDocument\Resource\ResourceConfig::setConfig
     */
    public function testSetConfig()
    {
        $config = array(
            'data' => 'foo',
        );
        $resourceConfig = new ResourceConfig;
        $resourceConfig->setConfig($config);
        $ref = new \ReflectionObject($resourceConfig);
        $prop = $ref->getProperty('config');
        $prop->setAccessible(true);
        $this->assertEquals($config, $prop->getValue($resourceConfig));
    }

    /**
     * @covers NpDocument\Resource\ResourceConfig::configure
     */
    public function testConfigure()
    {
        $resource = new Resource;
        $config = array(
            'type' => 'standard',
            'data' => 'foo',
            'inner_id' => 356,
        );
        $resourceConfig = new ResourceConfig($config);
        $resourceConfig->configure($resource);
        
        $this->assertEquals('standard', $resource->getType());
        $this->assertEquals('356', $resource->getInnerId());
        $this->assertEquals('standard' . $this->resourceIdDelimiter . '356', $resource->getResourceId());
    }
}
