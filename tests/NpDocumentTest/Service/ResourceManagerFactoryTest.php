<?php
namespace NpDocumentTest\Service;

use NpDocumentTest\Bootstrap;
use NpDocument\Service\ResourceManagerFactory;
use Zend\ServiceManager\ServiceManager;
use Zend\ServiceManager\Config as ServiceManagerConfig;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-01 at 15:31:54.
 */
class ResourceManagerFactoryTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var ResourceManagerFactory
     */
    protected $object;
    
    /**
     *
     * @var ServiceManager
     */
    protected $serviceManager;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->serviceManager = Bootstrap::getServiceManager();
        //$config = $serviceManager->get('Config');
        $this->object = new ResourceManagerFactory;
        $ref = new \ReflectionObject($this->object);
        $prop = $ref->getProperty('configId');
        $prop->setAccessible(true);
        $prop->setValue($this->object, 'test_np_document_resource_manager');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers NpDocument\Service\ResourceManagerFactory::createService
     */
    public function testCreateService()
    {
        $pluginManager = $this->object->createService($this->serviceManager);
        $this->assertInstanceOf('NpDocument\Resource\Manager\StandardManager', $pluginManager);
    }
    
    /**
     * Di設定に不備があれば、例外が投げられる。
     * 
     * @expectedException NpDocument\Exception\RuntimeException
     */
    public function testInvalidDiConfigThrowsException()
    {
        $testConfig = $this->serviceManager->get('Config');
        $diNullConfig = array(
            'test_np_document_resource_manager' => array(
                'di' => array(),
            ),
        );
        $config = \Zend\Stdlib\ArrayUtils::merge($testConfig, $diNullConfig);
        
        $serviceManager = new ServiceManager(new ServiceManagerConfig());
        $serviceManager->setService('Config', $config);
        $pluginManager = $this->object->createService($serviceManager);
        $this->assertInstanceOf('NpDocument\Resource\Manager\StandardManager', $pluginManager);
    }
    
    /**
     * Di設定に不備があってもフォールバックして設定から直接作成するオプションのテスト
     * 通常はDi設定を削除するべき。
     * 
     */
    public function testInvalidDiConfigWithSuppressException()
    {
        $testConfig = $this->serviceManager->get('Config');
        $diNullConfig = array(
            'test_np_document_resource_manager' => array(
                'throw_exception' => false,//suppress exception
                'di' => array(),
            ),
        );
        $config = \Zend\Stdlib\ArrayUtils::merge($testConfig, $diNullConfig);
        
        $serviceManager = new ServiceManager(new ServiceManagerConfig());
        $serviceManager->setService('Config', $config);
        $pluginManager = $this->object->createService($serviceManager);
        $this->assertInstanceOf('NpDocument\Resource\Manager\StandardManager', $pluginManager);
    }
    
    public function testCanRetrieveManagerWithDi()
    {
        $testConfig = $this->serviceManager->get('Config');
        $diNullConfig = array(
            'test_np_document_resource_manager' => array(
                'throw_exception' => true,//if fails throw exception
                'di' => array(
                    'instance' => array(
                        'alias' => array(
                            'manager' => 'NpDocument\Resource\Manager\StandardManager',
                        ),
                    ),
                ),
            ),
        );
        $config = \Zend\Stdlib\ArrayUtils::merge($testConfig, $diNullConfig);
        
        $serviceManager = new ServiceManager(new ServiceManagerConfig());
        $serviceManager->setService('Config', $config);
        $pluginManager = $this->object->createService($serviceManager);
        $this->assertInstanceOf('NpDocument\Resource\Manager\StandardManager', $pluginManager);
    }
}
